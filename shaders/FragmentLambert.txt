// Lambert Fragment Shader
#version 400

out vec4 frag_colour;

in vec4 ex_worldPosition;
in vec4 ex_worldNormal;

uniform vec3 uniformColor;

struct lightSource {
vec3 position;
vec3 diffuse;
vec3 specular;
};

uniform lightSource lights [5];

void main ()
{
	  vec3 lightPosition = vec3(0.0, 0.0, 0.0);
    vec4 lightColor = vec4( 0.385, 0.647, 0.812, 1.0);
    vec4 lightVector = normalize(vec4(lightPosition, 1) - ex_worldPosition);
    float dot_product = max(dot( lightVector, normalize(ex_worldNormal) ), 0.0);

    vec4 diffuse = dot_product * lightColor;
    vec4 ambient = vec4( 0.1, 0.1, 0.1, 1.0);

    frag_colour = (ambient + diffuse) * vec4(uniformColor, 1);
}